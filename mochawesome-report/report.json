{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-14T00:54:58.945Z",
    "end": "2022-10-14T01:00:59.610Z",
    "duration": 688,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b30885da-71db-4633-bb64-3690bc28400d",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33821ccb-28f0-4e82-9287-712c62decbe3",
          "title": "Teste da Funcionalidade de Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato (schema) de produtos",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve validar contrato (schema) de produtos",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "f1fbee5f-a870-4471-9699-0f0e5bebd694",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar Produtos",
              "fullTitle": "Teste da Funcionalidade de Produtos Listar Produtos",
              "timedOut": null,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'produtos'\n}).then(response => {\n  expect(response.body.produtos[1].nome).to.contains('Produto');\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(15);\n});",
              "err": {},
              "uuid": "fc79a2e6-0dd5-4e79-a8e6-ba569a0b7100",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto",
              "fullTitle": "Teste da Funcionalidade de Produtos Cadastrar Produto",
              "timedOut": null,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "4d910498-4e55-40c7-a995-4660882d403c",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, \"Samsung 60 polegadas\", 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "25f5dea1-9dd5-471b-aea6-bc97166f693a",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve editar um produto",
              "timedOut": null,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.request('produtos').then(response => {\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 400,\n      \"descricao\": \"Mouse - Oferta\",\n      \"quantidade\": 350\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "ccb0dbe3-e21d-47fa-adb5-fa92c2a2580c",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  let id = response.body._id;\n  cy.request('produtos').then(response => {\n    let id = response.body.produtos[0]._id;\n    cy.request({\n      method: 'PUT',\n      url: `produtos/${id}`,\n      headers: {\n        authorization: token\n      },\n      body: {\n        \"nome\": \"Teste Alteração\",\n        \"preco\": 400,\n        \"descricao\": \"Mouse - Oferta\",\n        \"quantidade\": 350\n      }\n    }).then(response => {\n      expect(response.body.message).to.equal('Registro alterado com sucesso');\n    });\n  });\n});",
              "err": {},
              "uuid": "27efb45b-bc8f-4284-8300-63a02b72adf0",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto previamente cadastrado",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve deletar um produto previamente cadastrado",
              "timedOut": null,
              "duration": 38,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.contains('excluído');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "f0d67327-50db-4905-9df4-4d0d8265b88c",
              "parentUUID": "33821ccb-28f0-4e82-9287-712c62decbe3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1fbee5f-a870-4471-9699-0f0e5bebd694",
            "fc79a2e6-0dd5-4e79-a8e6-ba569a0b7100",
            "4d910498-4e55-40c7-a995-4660882d403c",
            "25f5dea1-9dd5-471b-aea6-bc97166f693a",
            "ccb0dbe3-e21d-47fa-adb5-fa92c2a2580c",
            "27efb45b-bc8f-4284-8300-63a02b72adf0",
            "f0d67327-50db-4905-9df4-4d0d8265b88c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 277,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f8859ab-95e4-44e5-b419-c72291026f18",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.js",
      "file": "cypress\\e2e\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "adadb279-9ef9-4331-a2fe-62a43b9664ca",
          "title": "Login - Testes da API ServeRest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve fazer login com sucesso",
              "fullTitle": "Login - Testes da API ServeRest Deve fazer login com sucesso",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://localhost:3000/login',\n  body: {\n    \"email\": \"fulano@qa.com\",\n    \"password\": \"teste\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Login realizado com sucesso');\n  cy.log(response.body.authorization);\n});",
              "err": {},
              "uuid": "bf2a74ac-3bb0-45c5-9b7a-7c1d1e5dba06",
              "parentUUID": "adadb279-9ef9-4331-a2fe-62a43b9664ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf2a74ac-3bb0-45c5-9b7a-7c1d1e5dba06"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 68,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1dce75b0-f066-4f20-b9b7-446db8b4c846",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
          "title": "Teste da Funcionalidade de Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato (schema) de produtos",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve validar contrato (schema) de produtos",
              "timedOut": null,
              "duration": 66,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "96f739d1-3582-417c-ab28-46c8e9eacde9",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar Produtos",
              "fullTitle": "Teste da Funcionalidade de Produtos Listar Produtos",
              "timedOut": null,
              "duration": 27,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'produtos'\n}).then(response => {\n  expect(response.body.produtos[1].nome).to.contains('Produto');\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(15);\n});",
              "err": {},
              "uuid": "d9ccaf9d-a3c9-4d9d-8c5a-e748ebf72846",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto",
              "fullTitle": "Teste da Funcionalidade de Produtos Cadastrar Produto",
              "timedOut": null,
              "duration": 28,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "11f4a037-5ab4-4108-9901-4175532b4e4f",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, \"Samsung 60 polegadas\", 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "5d65f22b-9a4a-40d2-a2e1-96ad0d23854e",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve editar um produto",
              "timedOut": null,
              "duration": 34,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.request('produtos').then(response => {\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 400,\n      \"descricao\": \"Mouse - Oferta\",\n      \"quantidade\": 350\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "0929fdd1-0278-421a-9504-220077d8bf9a",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 45,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  let id = response.body._id;\n  cy.request('produtos').then(response => {\n    let id = response.body.produtos[0]._id;\n    cy.request({\n      method: 'PUT',\n      url: `produtos/${id}`,\n      headers: {\n        authorization: token\n      },\n      body: {\n        \"nome\": \"Teste Alteração\",\n        \"preco\": 400,\n        \"descricao\": \"Mouse - Oferta\",\n        \"quantidade\": 350\n      }\n    }).then(response => {\n      expect(response.body.message).to.equal('Registro alterado com sucesso');\n    });\n  });\n});",
              "err": {},
              "uuid": "7bc49fc8-9c41-489e-935e-f10f4911fc94",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto previamente cadastrado",
              "fullTitle": "Teste da Funcionalidade de Produtos Deve deletar um produto previamente cadastrado",
              "timedOut": null,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC ${Math.floor(Math.random() * 100000)}`;\ncy.cadastrarProduto(token, produto, 233, \"Teste\", 44).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.contains('excluído');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "c9087eb3-f0c6-40cb-a151-7bf5dfdcf177",
              "parentUUID": "05b1cab4-240c-4e8f-8855-becbd9e3f6bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96f739d1-3582-417c-ab28-46c8e9eacde9",
            "d9ccaf9d-a3c9-4d9d-8c5a-e748ebf72846",
            "11f4a037-5ab4-4108-9901-4175532b4e4f",
            "5d65f22b-9a4a-40d2-a2e1-96ad0d23854e",
            "0929fdd1-0278-421a-9504-220077d8bf9a",
            "7bc49fc8-9c41-489e-935e-f10f4911fc94",
            "c9087eb3-f0c6-40cb-a151-7bf5dfdcf177"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 263,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5a0269fa-924e-4ad4-8f6a-3ab77eafb986",
      "title": "",
      "fullFile": "cypress\\e2e\\login.cy.js",
      "file": "cypress\\e2e\\login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "05bc1dac-e9d3-497b-a62e-b9e32bb34097",
          "title": "Login - Testes da API ServeRest",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve fazer login com sucesso",
              "fullTitle": "Login - Testes da API ServeRest Deve fazer login com sucesso",
              "timedOut": null,
              "duration": 80,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: 'http://localhost:3000/login',\n  body: {\n    \"email\": \"fulano@qa.com\",\n    \"password\": \"teste\"\n  }\n}).then(response => {\n  expect(response.status).to.equal(200);\n  expect(response.body.message).to.equal('Login realizado com sucesso');\n  cy.log(response.body.authorization);\n});",
              "err": {},
              "uuid": "8837c169-b87b-4633-90c9-c99559903030",
              "parentUUID": "05bc1dac-e9d3-497b-a62e-b9e32bb34097",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8837c169-b87b-4633-90c9-c99559903030"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 80,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}